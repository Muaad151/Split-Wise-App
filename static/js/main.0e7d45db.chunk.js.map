{"version":3,"sources":["heap.js","data.js","App.js","algo.js","reportWebVitals.js","index.js"],"names":["heap","Object","classCallCheck","this","createClass","key","value","console","log","push","percolateUp","length","size","parentIndex","index","Math","floor","temp","l","r","largest","heapify","len","ans","last","pop","h","insert","isEmpty","x","extractMax","GenerateData","random","vertices","i","id","label","edges","j","from","to","String","nodes","network","network2","data","genNewBtn","document","getElementById","solveBtn","container","querySelector","container2","onclick","setData","solvedData","vertCount","edgeCount","arr","Array","fill","curr","parseInt","pos_heap","Heap","neg_heap","settledEdges","mx","mn","amt","min","abs","solve","style","display","App","react_default","a","createElement","className","window","addEventListener","options","arrows","labelHighlightBold","font","scaling","shape","Network","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0e7d45db.chunk.js","sourcesContent":["\r\n\r\n export default class heap{\r\n  \r\n  constructor(){\r\n    this.heap= [];\r\n  }\r\n\r\n  insert(value) {\r\n    console.log(value);\r\n    this.heap.push(value);\r\n    this.percolateUp();\r\n}\r\n\r\n  size(){\r\n    return this.heap.length;\r\n  }\r\n\r\n  isEmpty(){\r\n    return (this.size() ===0);\r\n  }\r\n\r\n\r\n  percolateUp(){\r\n    let index=this.size()-1;\r\n    let parentIndex\r\n\r\n    while(index>0){\r\n      parentIndex=Math.floor((index-1)/2);\r\n      if(this.heap[index][0] > this.heap[parentIndex][0]){\r\n          let temp=this.heap[index];\r\n          this.heap[index]= this.heap[parentIndex];\r\n          this.heap[parentIndex]=temp;\r\n      }else \r\n        break;\r\n      index=parentIndex;\r\n    }\r\n  }\r\n\r\n  heapify(index){\r\n    let l=2*index+1;\r\n    let r=2*index+2;\r\n    let largest=index;\r\n    if(l<this.heap.length && this.heap[l][0] > this.heap[largest][0] )\r\n        largest=l;\r\n    if(r<this.heap.length && this.heap[r][0] > this.heap[largest][0] )\r\n        largest= r;\r\n    if(largest!==index){\r\n      let temp=this.heap[largest];\r\n      this.heap[largest]=this.heap[index];\r\n      this.heap[index]=temp;\r\n      this.heapify(largest);\r\n    }\r\n  }\r\n\r\n  extractMax(){\r\n    if(this.heap.size===0)\r\n        return ;\r\n    \r\n    let len=this.size();\r\n    let ans=this.heap[0];\r\n    let last=this.heap[len-1];\r\n    \r\n    //swapping last with first and removing last element\r\n\r\n    this.heap[0]=last;\r\n    this.heap.pop();\r\n\r\n    this.heapify(0);\r\n\r\n    return ans;\r\n  }\r\n}\r\n\r\nlet h=new heap();\r\nh.insert([1,0])\r\nh.insert([5,0])\r\nh.insert([6,0])\r\nh.insert([7,0])\r\n\r\nwhile (!h.isEmpty()) {\r\n  let x=h.extractMax();\r\n  console.log(x[0]);\r\n}\r\n\r\n","\r\n\r\nexport default function GenerateData(){\r\n  let len= Math.floor(Math.random() *8 )+2 // 2 to 9\r\n\r\n  let vertices=[];\r\n\r\n  for(let i=1;i<=len;i++){\r\n    vertices.push({id:i, label:\"Person \"+i});\r\n  }\r\n\r\n  let edges=[];\r\n\r\n  for(let i=1;i<=len;i++){\r\n    for(let j=i+1;j<=len;j++){\r\n        if((Math.random()*100)%2===0){\r\n            edges.push({from:i, to :j, label: String(Math.floor(Math.random()*100)+1)} )\r\n          }else{\r\n            edges.push({from:j, to :i, label: String(Math.floor(Math.random()*100)+1)} )\r\n\r\n        }\r\n    }\r\n  }\r\n\r\n  const data={\r\n    nodes: vertices,\r\n    edges: edges,\r\n  }\r\n  return data;\r\n}","import './App.css';\nimport React from 'react'\nimport solve from './algo'\nimport GenerateData from './data'\nimport { Network } from \"vis-network\";\n\nlet data=GenerateData();\nconst genNewBtn = document.getElementById('generate-graph');\nconst solveBtn = document.getElementById('solve');\n\nlet network;\nlet network2;\nlet container = document.querySelector('.network');\nlet container2 = document.querySelector('.network2');\n\nfunction onLoad(){\n    const options = {\n      edges: {\n        arrows: {\n            to: true\n        },\n        labelHighlightBold: true,\n        font: {\n            size: 10\n        },\n        nodes: {\n          font: '12px arial red',\n          scaling: {\n              label: true\n          },\n          shape: 'icon',\n        }\n    },\n    }\n\n     network = new Network(container,data,options);\n     network2 = new Network(container2,data,options);\n     container2.style.display = 'none';\n     console.log(container, container2)\n}\n\ngenNewBtn.onclick =  ()=> {\n  data = GenerateData();\n  network.setData(data);\n};\n\nsolveBtn.onclick = ()=>{\n  console.log(\"hello\")\n  console.log(data);\n  const solvedData = solve(data);\n  network2.setData(solvedData);\n  if(container2.style.display==='none')\n    container2.style.display = 'inline';\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <main>\n  \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\nwindow.addEventListener(\"DOMContentLoaded\",onLoad);","\r\nimport Heap from './heap'\r\n\r\n\r\nexport default function solve(data){\r\n\r\n  let vertCount = data['nodes'].length\r\n  let edgeCount = data['edges'].length\r\n\r\n\r\n  let arr=Array(vertCount).fill(0);\r\n\r\n  for(let i = 0; i < edgeCount; i++){\r\n      let curr = data['edges'][i];\r\n\r\n      arr[curr[\"to\"]-1] += parseInt(curr[\"label\"]);\r\n      arr[curr[\"from\"]-1] -= parseInt(curr[\"label\"]);\r\n  }\r\n\r\n  const pos_heap = new Heap();\r\n  const neg_heap = new Heap();\r\n\r\n  for (let i = 0; i < vertCount; i++) {\r\n      if(arr[i]>0)\r\n        pos_heap.insert([arr[i], i])\r\n      else if(arr[i]<0)\r\n        {neg_heap.insert([-arr[i], i])\r\n          arr[i] *= -1;}\r\n  }\r\n\r\n    let settledEdges=[];\r\n\r\n    while(!pos_heap.isEmpty() && !neg_heap.isEmpty()) {\r\n      const mx = pos_heap.extractMax();\r\n      const mn = neg_heap.extractMax();\r\n\r\n      const amt = Math.min(mx[0],mn[0]);\r\n      const to = mx[1];\r\n      const from = mn[1];\r\n\r\n      settledEdges.push({from: from+1, to: to+1, label: String(Math.abs(amt))});\r\n      arr[to] -= amt;\r\n      arr[from] -= amt;\r\n\r\n      if(mx[0] > mn[0]){\r\n          pos_heap.insert([arr[to],to]);\r\n      } else if(mx[0] < mn[0]){\r\n          neg_heap.insert([arr[from],from]);\r\n      }    \r\n  }  \r\n\r\n    let settledData={\r\n      nodes: data['nodes'],\r\n      edges: settledEdges\r\n    }\r\n    return settledData;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport './bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}